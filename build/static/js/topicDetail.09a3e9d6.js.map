{"version":3,"sources":["Config/index.js","Pages/TopicDetail/reply.js","Pages/TopicDetail/replyList.js","Pages/TopicDetail/index.js"],"names":["themeMap","share","desc","good","ask","job","dev","reply_Replay","Object","index_module","stores","createReply","detailStore","state","content","textChange","e","_this","setState","target","value","props","replyId","concat","placeholder","then","data","window","scrollTo","document","body","scrollHeight","hideCb","this","react_default","a","createElement","className","onChange","onClick","react","defaultProps","replyList_ReplyList","upReply","accessToken","loginStore","replyMap","up","index","reply","keys","forEach","item","hideReply","_this2","list","map","key","id","Link","to","author","loginname","style","backgroundImage","avatar_url","distance_in_words_to_now_default","Date","create_at","locale","zh_cn_default","is_uped","ups","length","dangerouslySetInnerHTML","__html","TopicDetail_TopicDetail","collect","isCollect","collectTopic","getTopicDetail","preProps","topicDetail","hljs","initHighlighting","clearTopicDetail","format_default","visit_count","tab","is_collect","title","replies","nextProps","match","params"],"mappings":"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","file":"static/js/topicDetail.09a3e9d6.js","sourcesContent":["export const test = 1;\n\nexport const themeMap = {\n  share: {\n    desc: '分享',\n  },\n  good: {\n    desc: '精华',\n  },\n  ask: {\n    desc: '问答',\n  },\n  job: {\n    desc: '招聘',\n  },\n  dev: {\n    desc: '客户端测试',\n  },\n};\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\n@inject(stores => ({\n  createReply: stores.detailStore.createReply,\n}))\n@observer\nexport default class Replay extends Component {\n  static propTypes = {\n    createReply: PropTypes.func.isRequired,\n    replyId: PropTypes.string,\n    placeholder: PropTypes.string,\n    hideCb: PropTypes.func,\n  }\n  static defaultProps = {\n    replyId: '',\n    placeholder: '说说你的看法...',\n    hideCb: () => {},\n  }\n  state = {\n    content: '',\n  }\n  textChange = (e) => {\n    this.setState({\n      content: e.target.value,\n    });\n  }\n  createReply = () => {\n    let content = this.state.content;\n    if (this.props.replyId) {\n      content = `${this.props.placeholder} ${content}`;\n    }\n    content += `\n    \n\n来自✨ [react-cnode](https://github.com/MMGong/react-cnode) ✨`;\n    this.props.createReply(content, this.props.replyId).then((data) => {\n      if (data) {\n        this.setState({\n          content: '',\n        });\n        window.scrollTo(0, document.body.scrollHeight);\n        this.props.hideCb();\n      }\n    });\n  }\n  render() {\n    const content = this.state.content;\n    const placeholder = this.props.placeholder;\n    return (\n      <div className=\"reply__text clearfix\">\n        <div className=\"reply__text--title\">评论</div>\n        <textarea\n          className=\"reply__text--textarea\"\n          onChange={this.textChange}\n          placeholder={placeholder}\n          value={content}\n        />\n        <button\n          className=\"reply__text--btn float-right\"\n          onClick={this.createReply}\n        >回复\n        </button>\n      </div>\n    );\n  }\n}\n\n","/* eslint-disable react/no-danger */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now/index';\nimport zhLocale from 'date-fns/locale/zh_cn/index';\nimport { Link } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport Reply from './reply';\n\n@inject(stores => ({\n  upReply: stores.detailStore.upReply,\n  accessToken: stores.loginStore.accessToken,\n}))\n@observer\nexport default class ReplyList extends Component {\n  static propTypes = {\n    list: PropTypes.arrayOf(PropTypes.object).isRequired,\n    upReply: PropTypes.func.isRequired,\n    accessToken: PropTypes.string.isRequired,\n  }\n  state = {\n    replyMap: {},\n    // currentReplyId: '',\n  }\n  up = (replyId, index) => {\n    this.props.upReply(replyId, index, this.props.accessToken);\n  }\n  reply = (replyId) => {\n    const replyMap = this.state.replyMap;\n    if (replyMap[replyId]) {\n      replyMap[replyId] = false;\n    } else {\n      Object.keys(replyMap).forEach((item) => {\n        replyMap[item] = false;\n      });\n      replyMap[replyId] = !replyMap[replyId];\n    }\n    this.setState({\n      // currentReplyId: replyId,\n      replyMap: replyMap,\n    });\n  }\n  hideReply = () => {\n    const replyMap = this.state.replyMap;\n    Object.keys(replyMap).forEach((item) => {\n      replyMap[item] = false;\n    });\n    this.setState({\n      replyMap: replyMap,\n    });\n  }\n  render() {\n    const list = this.props.list;\n    const replyMap = this.state.replyMap;\n    return (\n      <section className=\"reply\">\n        <ul className=\"reply__list\">\n          {\n            list.map((item, index) => (\n              <li className=\"flex reply__item\" key={item.id}>\n                <Link to={`/user/${item.author.loginname}`} className=\"reply__item__left\">\n                  <div\n                    className=\"reply__item--avatar\"\n                    style={{ backgroundImage: `url(${item.author.avatar_url})` }}\n                  />\n                </Link>\n                <div className=\"reply__item__right flex-1\">\n                  <div className=\"reply__item__user\">\n                    <span>\n                      <Link\n                        to={`/user/${item.author.loginname}`}\n                        className=\"reply__item__user--item middle-dot\"\n                      >\n                        {item.author.loginname}\n                      </Link>\n                      <span className=\"reply__item__user--item middle-dot\">{index + 1}楼</span>\n                      <span className=\"reply__item__user--item middle-dot\">{distanceInWordsToNow(new Date(item.create_at), { locale: zhLocale })}前</span>\n                    </span>\n                    <span\n                      className=\"float-right reply__item__icon reply__item__icon--huifu\"\n                      onClick={() => this.reply(item.id)}\n                    >\n                      <i className=\"iconfont icon-huifu reply__item__user--zan\" />\n                    </span>\n                    <span\n                      className={`float-right reply__item__icon ${item.is_uped && 'active'}`}\n                      onClick={() => this.up(item.id, index)}\n                    >\n                      <i className=\"iconfont icon-zan reply__item__user--zan\" />\n                      <span>{item.ups.length}</span>\n                    </span>\n                  </div>\n                  <div\n                    className=\"reply__item__content\"\n                    dangerouslySetInnerHTML={{ __html: item.content }}\n                  />\n                  {\n                    replyMap[item.id] && (\n                      <Reply\n                        replyId={item.id}\n                        placeholder={`@${item.author.loginname}`}\n                        hideCb={this.hideReply}\n                      />\n                    )\n                  }\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n        <Reply />\n      </section>\n    );\n  }\n}\n","/*\n * @Author: gonghao\n * @Date: 2018-07-30 23:04:10\n * @Last Modified by: gonghao\n * @Last Modified time: 2018-09-08 23:27:11\n * @Desc: 文章详情\n */\n\n/* eslint-disable react/no-danger  */\n\nimport React, { Component } from 'react';\nimport { observer, inject, PropTypes as MobxPropTypes } from 'mobx-react';\nimport dateFormat from 'date-fns/format/index';\nimport { Link } from 'react-router-dom';\nimport { themeMap } from '../../Config';\nimport ReplyList from './replyList';\nimport './index.less';\n\n\n@inject('detailStore')\n@observer\nexport default class TopicDetail extends Component {\n  static propTypes = {\n    detailStore: MobxPropTypes.observableObject.isRequired,\n  }\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      id: nextProps.match.params.id,\n    };\n  }\n  state = {}\n  componentDidMount() {\n    this.props.detailStore.getTopicDetail(this.state.id);\n  }\n  componentDidUpdate(preProps) {\n    if (preProps.detailStore.topicDetail.content) {\n      window.hljs.initHighlighting();\n    }\n  }\n  componentWillUnmount() {\n    this.props.detailStore.clearTopicDetail();\n  }\n  collect = (isCollect) => {\n    this.props.detailStore.collectTopic(!isCollect);\n  }\n  render() {\n    const topicDetail = this.props.detailStore.topicDetail;\n    if (Object.keys(topicDetail).length === 0) return null;\n    return (\n      <section className=\"detail\">\n        <div className=\"detail__author flex\">\n          <Link to={`/user/${topicDetail.author ? topicDetail.author.loginname : ''}`}>\n            <div\n              className=\"detail__author__avatar\"\n              style={{ backgroundImage: topicDetail.author ? `url(${topicDetail.author.avatar_url})` : '' }}\n            />\n          </Link>\n          <div className=\"detail__author__info flex-1 flex flex-v flex-h-between\">\n            <Link\n              to={`/user/${topicDetail.author ? topicDetail.author.loginname : ''}`}\n              className=\"detail__author__info--name ellipsis\"\n            >\n              {topicDetail.author ? topicDetail.author.loginname : ''}\n            </Link>\n            <div className=\"detail__author__info--status clearfix\">\n              <span className=\"middle-dot\">发布于 {dateFormat(topicDetail.create_at, 'YYYY-MM-DD HH:mm')}</span>\n              <span className=\"middle-dot\">阅读 {topicDetail.visit_count}</span>\n              <span className=\"middle-dot\">来自 {themeMap[topicDetail.tab].desc}</span>\n              <div className=\"detail__collect float-right\" onClick={() => this.collect(topicDetail.is_collect)}>\n                {topicDetail.is_collect ? '取消收藏' : '收藏'}\n              </div>\n            </div>\n          </div>\n        </div>\n        <h1 className=\"detail__title\">{topicDetail.title}</h1>\n        <div className=\"detail__content\">\n          <div className=\"markdown-text\" dangerouslySetInnerHTML={{ __html: topicDetail.content }} />\n        </div>\n        <ReplyList\n          list={topicDetail.replies}\n        />\n      </section>\n    );\n  }\n}\n"],"sourceRoot":""}