{"version":3,"sources":["Pages/User/recentItem.js","Pages/User/index.js"],"names":["recentItem_RecentItem","state","info","this","props","distanceDate","distance_in_words_to_now_default","Date","last_reply_at","locale","zh_cn_default","a","react_default","createElement","className","Link","to","concat","author","loginname","style","backgroundImage","avatar_url","title","id","react","User_User","Object","index_module","stores","userStore","loginStore","userInfo","myCollectTopics","withRouter","activeTab","tabList","desc","list","isMySelf","_this","match","params","changeTab","setState","getUserInfo","getUserCollectTopics","nextProps","console","log","curLoginname","willLoginname","changeTabList","_this2","_this$state","recent_topics","recent_replies","score","create_at","format_default","background","height","map","item","key","onClick","length"],"mappings":"0SAMqBA,qLAInBC,iEACS,IAELC,EACEC,KAAKC,MADPF,KAEIG,EAAeC,IAAqB,IAAIC,KAAKL,EAAKM,gBAAkBC,OAAQC,EAAAC,IAClF,OACEC,EAAAD,EAAAE,cAAA,MAAIC,UAAU,6BACZF,EAAAD,EAAAE,cAAA,OAAKC,UAAU,gCACbF,EAAAD,EAAAE,cAACE,EAAA,GACCC,GAAE,SAAAC,OAAWf,EAAKgB,OAAOC,WACzBL,UAAU,sBACVM,OAASC,gBAAe,OAAAJ,OAASf,EAAKgB,OAAOI,WAArB,MACxBC,MAAOrB,EAAKgB,OAAOC,aAGvBP,EAAAD,EAAAE,cAAA,OAAKC,UAAU,sCACbF,EAAAD,EAAAE,cAACE,EAAA,GAAKC,GAAE,UAAAC,OAAYf,EAAKsB,IAAMV,UAAU,YAAaZ,EAAKqB,QAE7DX,EAAAD,EAAAE,cAAA,OAAKC,UAAU,gBAAgBT,EAA/B,kBAvBgCoB,EAAA,4DCSnBC,KAPpBC,OAAAC,EAAA,EAAAD,CAAO,SAAAE,GAAM,OACZC,UAAWD,EAAOC,UAClBC,WAAYF,EAAOE,WACnBC,SAAUH,EAAOE,WAAWC,SAC5BC,gBAAiBJ,EAAOE,WAAWE,mBALpCN,OAAAO,EAAA,EAAAP,OAOAA,OAAAC,EAAA,EAAAD,sLAQC1B,OACEkC,UAAW,EACXC,UACEZ,GAAI,EACJa,KAAM,6CACNC,UAEAd,GAAI,EACJa,KAAM,6CACNC,UAEFC,SAAUC,EAAKpC,MAAM2B,WAAWC,SAASb,YAAcqB,EAAKpC,MAAMqC,MAAMC,OAAOvB,aAsCjFwB,UAAY,SAACnB,GACXgB,EAAKI,UACHT,UAAWX,wEArCb,IAAML,EAAYhB,KAAKC,MAAMqC,MAAMC,OAAOvB,UAC1ChB,KAAKC,MAAM0B,UAAUe,YAAY1B,GAE/BhB,KAAKC,MAAM2B,WAAWC,SAASb,WAC5BhB,KAAKC,MAAM2B,WAAWC,SAASb,YAAcA,GAEhDhB,KAAKC,MAAM2B,WAAWe,yEAGAC,GACxBC,QAAQC,IAAI,aAAcF,GAC1B,IAAMG,EAAe/C,KAAKC,MAAMqC,MAAMC,OAAOvB,UACvCgC,EAAgBJ,EAAUN,MAAMC,OAAOvB,UACzC+B,IAAiBC,IACnBhD,KAAKC,MAAM0B,UAAUe,YAAYM,GACjChD,KAAKyC,UACHT,UAAW,KAIbY,EAAUhB,WAAWC,SAASb,WAC3B4B,EAAUhB,WAAWC,SAASb,YAAcgC,GAE/ChD,KAAKiD,cAAcL,EAAUd,uDAGnBK,GACZnC,KAAKyC,UACHR,QAASjC,KAAKF,MAAMmC,QAAQnB,SAC1BO,GAAI,EACJa,KAAM,2BACNC,KAAMA,wCASH,IAAAe,EAAAlD,KACD6B,EAAW7B,KAAKC,MAAM0B,UAAUE,SAD/BsB,EAMHnD,KAAKF,MAHPkC,EAHKmB,EAGLnB,UACAC,EAJKkB,EAILlB,QACAG,EALKe,EAKLf,SAEED,KAQJ,OANEA,EADgB,IAAdH,EACKH,EAASuB,kBACO,IAAdpB,EACFH,EAASwB,mBAETpB,EAAQ,GAAKA,EAAQ,GAAGE,QAG/B1B,EAAAD,EAAAE,cAAA,WAASC,UAAU,QACjBF,EAAAD,EAAAE,cAAA,OAAKC,UAAU,mBACbF,EAAAD,EAAAE,cAAA,OAAKC,UAAU,qBAAqBM,OAASC,gBAAe,OAAAJ,OAASe,EAASV,WAAlB,QAC5DV,EAAAD,EAAAE,cAAA,OAAKC,UAAU,yDACbF,EAAAD,EAAAE,cAAA,OAAKC,UAAU,kCAAkCkB,EAASb,WAC1DP,EAAAD,EAAAE,cAAA,OAAKC,UAAU,+BAAf,iBAAkDkB,EAASyB,OAC3D7C,EAAAD,EAAAE,cAAA,OAAKC,UAAU,mCAAf,uBAAuDkB,EAAS0B,UAAYC,IAAW3B,EAAS0B,UAAW,oBAAsB,IAE/HnB,GACE3B,EAAAD,EAAAE,cAACE,EAAA,GAAKC,GAAG,SAASF,UAAU,eAA5B,wBAKRF,EAAAD,EAAAE,cAAA,OAAKO,OAASwC,WAAY,UAAWC,OAAQ,UAC7CjD,EAAAD,EAAAE,cAAA,OAAKC,UAAU,wBAEXsB,EAAQ0B,IAAI,SAAAC,GAAI,OACdnD,EAAAD,EAAAE,cAAA,OACEmD,IAAKD,EAAKvC,GACVV,UAAS,uDAAAG,OAAyDkB,IAAc4B,EAAKvC,GAAK,SAAW,IACrGyC,QAAS,kBAAMZ,EAAKV,UAAUoB,EAAKvC,MAElCuC,EAAK1B,SAKdzB,EAAAD,EAAAE,cAAA,UAEIyB,EAAKwB,IAAI,SAAAC,GAAI,OAAKnD,EAAAD,EAAAE,cAACb,GAAWgE,IAAKD,EAAKvC,GAAItB,KAAM6D,MAGlC,IAAhBzB,EAAK4B,QAAiBtD,EAAAD,EAAAE,cAAA,OAAKC,UAAU,+CAAf,qCA9GAW,EAAA","file":"static/js/user.4e87dad5.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now/index';\nimport zhLocale from 'date-fns/locale/zh_cn/index';\nimport { Link } from 'react-router-dom';\n\nexport default class RecentItem extends Component {\n  static propTypes = {\n    info: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  }\n  state = {}\n  render() {\n    const {\n      info,\n    } = this.props;\n    const distanceDate = distanceInWordsToNow(new Date(info.last_reply_at), { locale: zhLocale });\n    return (\n      <li className=\"flex recent flex flex-v-c\">\n        <div className=\"recent__avatar flex flex-v-c\">\n          <Link\n            to={`/user/${info.author.loginname}`}\n            className=\"recent__avatar--img\"\n            style={{ backgroundImage: `url(${info.author.avatar_url})` }}\n            title={info.author.loginname}\n          />\n        </div>\n        <div className=\"flex-1 flex flex-v-c recent__title\">\n          <Link to={`/topic/${info.id}`} className=\"ellipsis\" >{info.title}</Link>\n        </div>\n        <div className=\"recent__time\">{distanceDate}前</div>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { observer, inject, PropTypes } from 'mobx-react';\nimport { withRouter, Link } from 'react-router-dom';\nimport dateFormat from 'date-fns/format/index';\nimport RecentItem from './recentItem';\nimport './index.less';\n\n@withRouter\n@inject(stores => ({\n  userStore: stores.userStore,\n  loginStore: stores.loginStore,\n  userInfo: stores.loginStore.userInfo,\n  myCollectTopics: stores.loginStore.myCollectTopics,\n}))\n@observer\nexport default class User extends Component {\n  static propTypes = {\n    userStore: PropTypes.observableObject.isRequired,\n    loginStore: PropTypes.observableObject.isRequired,\n    match: PropTypes.objectOrObservableObject.isRequired,\n    myCollectTopics: PropTypes.observableArray.isRequired,\n  }\n  state = {\n    activeTab: 1, // 1:最近创建的 2：最近参与的\n    tabList: [{\n      id: 1,\n      desc: '最近创建的话题',\n      list: [],\n    }, {\n      id: 2,\n      desc: '最近参与的话题',\n      list: [],\n    }],\n    isMySelf: this.props.loginStore.userInfo.loginname === this.props.match.params.loginname\n  }\n  componentDidMount() {\n    const loginname = this.props.match.params.loginname;\n    this.props.userStore.getUserInfo(loginname);\n    if (\n      this.props.loginStore.userInfo.loginname\n      && this.props.loginStore.userInfo.loginname === loginname\n    ) {\n      this.props.loginStore.getUserCollectTopics();\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log('nextProps:', nextProps);\n    const curLoginname = this.props.match.params.loginname;\n    const willLoginname = nextProps.match.params.loginname;\n    if (curLoginname !== willLoginname) {\n      this.props.userStore.getUserInfo(willLoginname);\n      this.setState({\n        activeTab: 1,\n      });\n    }\n    if (\n      nextProps.loginStore.userInfo.loginname\n      && nextProps.loginStore.userInfo.loginname === willLoginname\n    ) {\n      this.changeTabList(nextProps.myCollectTopics);\n    }\n  }\n  changeTabList(list) {\n    this.setState({\n      tabList: this.state.tabList.concat([{\n        id: 3,\n        desc: '我的收藏',\n        list: list,\n      }]),\n    });\n  }\n  changeTab = (id) => {\n    this.setState({\n      activeTab: id,\n    });\n  }\n  render() {\n    const userInfo = this.props.userStore.userInfo;\n    const {\n      activeTab,\n      tabList,\n      isMySelf,\n    } = this.state;\n    let list = [];\n    if (activeTab === 1) {\n      list = userInfo.recent_topics || [];\n    } else if (activeTab === 2) {\n      list = userInfo.recent_replies || [];\n    } else {\n      list = tabList[2] ? tabList[2].list : [];\n    }\n    return (\n      <section className=\"user\">\n        <div className=\"user__info flex\">\n          <div className=\"user__info__avatar\" style={{ backgroundImage: `url(${userInfo.avatar_url})` }} />\n          <div className=\"user__info__content flex flex-1 flex-v flex-h-between\">\n            <div className=\"user__info__content--loginname\">{userInfo.loginname}</div>\n            <div className=\"user__info__content--github\">积分: {userInfo.score}</div>\n            <div className=\"user__info__content--createtime\">创建于: {userInfo.create_at ? dateFormat(userInfo.create_at, 'YYYY-MM-DD HH:mm') : ''}</div>\n            {\n              isMySelf && (\n                <Link to=\"/write\" className=\"user__write\">写文章</Link>\n              )\n            }\n          </div>\n        </div>\n        <div style={{ background: '#f4f5f5', height: '1rem' }} />\n        <div className=\"user__info__tab flex\">\n          {\n            tabList.map(item => (\n              <div\n                key={item.id}\n                className={`user__info__tab--item flex flex-v-c flex-h-c flex-1 ${activeTab === item.id ? 'active' : ''}`}\n                onClick={() => this.changeTab(item.id)}\n              >\n                {item.desc}\n              </div>\n            ))\n          }\n        </div>\n        <ul>\n          {\n            list.map(item => (<RecentItem key={item.id} info={item} />))\n          }\n          {\n            list.length === 0 && (<div className=\"user__info__empty padding-tb-12 text-center\">暂无数据</div>)\n          }\n        </ul>\n      </section>\n    );\n  }\n}\n"],"sourceRoot":""}